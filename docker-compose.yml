services:
  rabbitmq:
    image: todomvc-rabbitmq
    container_name: rabbitmq
    build:
      context: ./services/rabbitmq
      dockerfile: Dockerfile
    volumes:
      - todomvc-rabbitmq-data:/var/lib/rabbitmq/mnesia/
    networks:
      - backnet
    env_file:
      - .env.secrets
      - ${APP_ENV}.env
    ports:
      - "5672:5672"
    expose:
      - "5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      timeout: 20s
      retries: 10

  email-transmitter:
    image: ecorrouge/email-transmitter
    container_name: email-transmitter
    build:
      context: services/email_transmitter
      dockerfile: Dockerfile
    networks:
      - backnet
    env_file:
      - .env.secrets
      - ${APP_ENV}.env
    depends_on:
      rabbitmq:
        condition: service_healthy

  postgres:
    image: todomvc-postgres
    platform: linux/amd64
    container_name: postgres
    build:
      context: ./services/postgres
      dockerfile: Dockerfile
    restart: always
    networks:
      - backnet
    env_file:
      - .env.secrets
      - ${APP_ENV}.env
    volumes:
      - todomvc-postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
      - "127.0.0.1:4001:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      timeout: 20s
      retries: 10
    expose:
      - 5432
    user: postgres

  api:
    restart: always
    image: todomvc-api
    container_name: api
    build:
      context: .
      dockerfile: ./flask/Dockerfile
    volumes:
      - ./flask:/api
      - ./common:/api/common
    ports:
      - "5000:5000"
    env_file:
      - .env.secrets
      - ${APP_ENV}.env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - backnet
  pgadmin:
    image: dpage/pgadmin4:2025-03-31-1
    restart: unless-stopped
    profiles: ["dev"]
    ports:
      - "127.0.0.1:5051:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backnet

volumes:
  todomvc-postgres-data:
    name: todomvc-postgres-data
  todomvc-rabbitmq-data:
    name: todomvc-rabbitmq-data
    driver: local

networks:
  backnet:
